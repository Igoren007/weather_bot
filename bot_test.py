import telebot
from telebot import types
import weather
from datetime import datetime


def get_token():

    with open("bot_token.txt") as f:
        bot_TOKEN = f.read().strip()
    return bot_TOKEN


bot = telebot.TeleBot(get_token())


@bot.message_handler(commands=['start'])
def send_welcome(message):

# markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
# btn1 = types.KeyboardButton('–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º')
# btn2 = types.KeyboardButton('–ù–µ —Ö–æ—á—É')
# markup.add(btn1, btn2)
# msg = bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ. "
#											"–•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?", reply_markup=markup)
# bot.register_next_step_handler(msg, first_choise)

	markup = types.InlineKeyboardMarkup()
	btn_yes = types.InlineKeyboardButton(text='–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º ‚úÖ', callback_data='yes')
	btn_no = types.InlineKeyboardButton(text='–ù–µ —Ö–æ—á—É ‚õî', callback_data='no')
	markup.add(btn_yes, btn_no)
	user_info = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} {message.from_user.last_name}, {message.from_user.username}"
	print(user_info)
	bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ. '
									  '–•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data in ['yes', 'no'])
def first_choise(call):

	if call.data == 'yes':
		markup = types.InlineKeyboardMarkup()
		btn_now = types.InlineKeyboardButton(text='–°–µ–π—á–∞—Å', callback_data='now')
		btn_today = types.InlineKeyboardButton(text='–°–µ–≥–æ–¥–Ω—è', callback_data='today')
		btn_tomorrow = types.InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞', callback_data='tomorrow')
		btn_week = types.InlineKeyboardButton(text='–ù–∞ –Ω–µ–¥–µ–ª—é', callback_data='week')
		markup.add(btn_now, btn_tomorrow, btn_week, btn_today)
		bot.send_message(call.message.chat.id, '–ö–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?', reply_markup=markup)

	elif call.data == 'no':
		bot.send_message(call.message.chat.id, "–ù—É –∏ –ª–∞–¥–Ω–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å - –ø–∏—à–∏ –º–Ω–µ.")


@bot.callback_query_handler(func=lambda call: call.data in ['now', 'today', 'tomorrow', 'week'])
def choise_period(call):

	if call.data == 'now':
		msg = bot.send_message(call.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
		bot.register_next_step_handler(msg, forecast_now)

	elif call.data == 'today':
		msg = bot.send_message(call.message.chat.id,
							   '–û—Ç–ª–∏—á–Ω–æ, –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')
		bot.register_next_step_handler(msg, forecast_today)

	elif call.data == 'tomorrow':
		msg = bot.send_message(call.message.chat.id,
							   "–û—Ç–ª–∏—á–Ω–æ, –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
		bot.register_next_step_handler(msg, forecast_tomorrow)

	elif call.data == 'week':
		msg = bot.send_message(call.message.chat.id,
							   '–û—Ç–ª–∏—á–Ω–æ, –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')
		bot.register_next_step_handler(msg, forecast_week)

	else:
		bot.send_message(call.message.chat.id, "–æ—à–∏–±–æ—á–Ω—ã–π –≤–≤–æ–¥")


def forecast_now(message):

	try:
		forecast = weather.weather_now(message.text)
		print(forecast)
		bot.send_message(message.chat.id, '—Ç—ã –∑–∞—Ö–æ—Ç–µ–ª —É–∑–Ω–∞—Ç—å –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ ' + message.text)
		sms = f"–í {message.text} —Å–µ–π—á–∞—Å —Ç–∞–∫–∞—è –ø–æ–≥–æ–¥–∞:\n" \
			   f"  üå°  —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {forecast['temp_now']} –≥—Ä,\n" \
			   f"  üå§  –Ω–∞ –Ω–µ–±–µ {forecast['sky']},\n" \
			   f"  üåÄ  —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {forecast['wind_speed']} –º/—Å,\n" \
			   f"  üìè  –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ {forecast['pressure']} –º–º.—Ä—Ç.—Å—Ç."
		bot.send_message(message.chat.id, sms)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º')


def forecast_today(message):

	try:
		data = weather.weather_today(message.text)
		sms = f'–í –≥–æ—Ä–æ–¥–µ {message.text} —Å–µ–≥–æ–¥–Ω—è –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∞—è –ø–æ–≥–æ–¥–∞:\n\n'
		for item in data:
			sms_i = f" ********  {datetime.fromtimestamp(item['date']).strftime('%H : %M')}  ********\n" \
					f"  üå°  —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {item['temp']} –≥—Ä,\n" \
					f"  üå§  –Ω–∞ –Ω–µ–±–µ {item['sky']},\n" \
					f"  üåÄ  —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {item['wind_speed']} –º/—Å,\n" \
					f"  üìè  –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ {item['pressure']} –º–º.—Ä—Ç.—Å—Ç.\n\n"
			sms += sms_i
		bot.send_message(message.chat.id, sms)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º')


def forecast_tomorrow(message):

	try:
		data = weather.weather_tomorrow(message.text)
		sms = f'–í –≥–æ—Ä–æ–¥–µ {message.text} –∑–∞–≤—Ç—Ä–∞ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∞—è –ø–æ–≥–æ–¥–∞:\n\n'
		sms_i = f"  üå°  —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –¥–Ω–µ–º {data['temp_day']} –≥—Ä,\n" \
					f"  üå°  —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –Ω–æ—á—å—é {data['temp_night']} –≥—Ä,\n" \
					f"  üå§  –Ω–∞ –Ω–µ–±–µ {data['sky']},\n" \
					f"  üåÄ  —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {data['wind_speed']} –º/—Å,\n" \
					f"  ‚Üî  –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {data['wind_deg']},\n" \
					f"  üìè  –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ {data['pressure']} –º–º.—Ä—Ç.—Å—Ç.\n\n"
		sms += sms_i
		bot.send_message(message.chat.id, sms)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º')


def forecast_week(message):

	try:
		data = weather.weather_for_week(message.text)
		sms = f'–í –≥–æ—Ä–æ–¥–µ {message.text} –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∞—è –ø–æ–≥–æ–¥–∞:\n\n'
		for item in data:
			sms_i = f"********   {datetime.fromtimestamp(item['date']).strftime('%d-%m-%Y')}   *********\n" \
					 f"  üå°  —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –¥–Ω–µ–º {item['temp_day']} –≥—Ä,\n" \
					 f"  üå°  —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –Ω–æ—á—å—é {item['temp_night']} –≥—Ä,\n" \
					 f"  üå§  –Ω–∞ –Ω–µ–±–µ {item['sky']},\n" \
					 f"  üåÄ  —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {item['wind_speed']} –º/—Å,\n" \
					 f"  ‚Üî  –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {item['wind_deg']},\n" \
					 f"  üìè  –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ {item['pressure']} –º–º.—Ä—Ç.—Å—Ç.\n\n"
			sms += sms_i
		bot.send_message(message.chat.id, sms)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º')


# bot.polling()
bot.infinity_polling(True)
